name: 'Quick K8s'
description: 'Quickly deploy a k8s cluster on Github Actions hosted runners'
inputs:
  apiServerPort:
    description: 'The port to use for the Kubernetes API server'
    required: false
    default: '6443'
  apiServerAddress:
    description: 'The address to use for the Kubernetes API server'
    required: false
    default: '0.0.0.0'
  disableDefaultCni:
    description: 'Disable the default CNI plugin'
    required: false
    default: 'true'
  ipFamily:
    description: 'The IP family to use for the Kubernetes API server'
    required: false
    default: 'dual'
  defaultNodeImage:
    description: 'The default node image to use for the Kubernetes cluster'
    required: false
    default: 'kindest/node:v1.31.2@sha256:18fbefc20a7113353c7b75b5c869d7145a6abd6269154825872dc59c1329912e'
  numControlPlaneNodes:
    description: 'The number of control plane nodes to use for the Kubernetes cluster'
    required: false
    default: '1'
  numWorkerNodes:
    description: 'The number of worker nodes to use for the Kubernetes cluster'
    required: false
    default: '1'
  kindVersion:
    description: 'The version of KinD to use'
    required: false
    default: 'v0.25.0'
  calicoVersion:
    description: 'The version of Calico to use'
    required: false
    default: 'v3.29.1'

runs:
  using: 'composite'
  steps:
    # Based on the environment, we need to install the correct version of KinD
    - name: Install KinD for Linux AMD64
      if: ${{ runner.os == 'Linux' && runner.arch == 'x64' }} 
      shell: bash
      run: |
        curl -Lo kind https://kind.sigs.k8s.io/dl/$KIND_VERSION/kind-linux-amd64
        chmod +x kind
        sudo mv kind /usr/local/bin/
      env:
        KIND_VERSION: ${{ inputs.kindVersion }}

    - name: Install KinD for Linux ARM64
      if: ${{ runner.os == 'Linux' && runner.arch == 'arm64' }}
      shell: bash
      run: |
        curl -Lo kind https://kind.sigs.k8s.io/dl/$KIND_VERSION/kind-linux-arm64
        chmod +x kind
        sudo mv kind /usr/local/bin/
      env:
        KIND_VERSION: ${{ inputs.kindVersion }}

    - name: Install KinD for MacOS
      if: ${{ runner.os == 'macOS' }}
      shell: bash
      run: |
        brew install kind

    # Create a new Kubernetes cluster using KinD
    - name: Populate temporary config file for KinD
      shell: bash
      run: ./${{ github.action_path }}/scripts/generate-kind-config.sh ${{ inputs.apiServerPort }} ${{ inputs.apiServerAddress }} ${{ inputs.disableDefaultCni }} ${{ inputs.ipFamily }} ${{ inputs.defaultNodeImage }} ${{ inputs.numControlPlaneNodes }} ${{ inputs.numWorkerNodes }}

    - name: Create a new Kubernetes cluster using KinD
      shell: bash
      run: kind create cluster --config kind-config.yaml

    - name: Install calico CNI if default CNI is disabled
      if: ${{ inputs.disableDefaultCni == 'true' }}
      shell: bash
      run: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/$CALICO_VERSION/manifests/calico.yaml
      env:
        CALICO_VERSION: ${{ inputs.calicoVersion }}
